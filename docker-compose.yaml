services:
  maria-db:
    image: mariadb:11.7.2
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: toctik
      MYSQL_USER: dev
      MYSQL_PASSWORD: devpass
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mariadb -uroot -prootpass -e 'SELECT 1;'"]
      interval: 3s
      timeout: 5s
      retries: 30
      start_period: 15s
    networks:
      - redis_network

  redis:
    image: redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - redis_network
    ports:
      - "6379:6379"

  video-processing-service:
    build:
      context: ./video_processing_service
      dockerfile: Dockerfile
    container_name: video-processing-service
    ports:
      - "8002:80"
    volumes:
      - ./video_processing_service:/app
      - counter_data:/app/counter
    depends_on:
      - redis
    environment:
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - S3_REGION=${S3_REGION}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - DOCKER_ENV=true
      - TZ=Asia/Bangkok
    networks:
      - redis_network

  video-processing-worker:
    build:
      context: ./video_processing_service
      dockerfile: Dockerfile
    container_name: video-processing-worker
    command: [ "celery", "-A", "tasks", "worker", "--pool=solo", "--loglevel=INFO", "-E", "-Q", "video_processing_queue" ]
    volumes:
      - ./video_processing_service:/app
      - counter_data:/app/counter
    depends_on:
      - redis
    environment:
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - S3_REGION=${S3_REGION}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - DOCKER_ENV=true
      - TZ=Asia/Bangkok
    networks:
      - redis_network

  convert-worker:
    build:
      context: ./convert_service
      dockerfile: Dockerfile_convert
    container_name: convert-worker
    command: [ "celery", "-A", "app.convert", "worker", "--pool=solo", "--loglevel=INFO", "-E", "-Q", "convert_queue" ]
    volumes:
      - ./convert_service:/app
    depends_on:
      - redis
    environment:
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - S3_REGION=${S3_REGION}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - DOCKER_ENV=true
      - TZ=Asia/Bangkok
    networks:
      - redis_network

  chunking-worker:
    build:
      context: ./chunking_service
      dockerfile: Dockerfile_chunking
    container_name: chunking-worker
    command: [ "celery", "-A", "app.chunking", "worker", "--pool=solo", "--loglevel=INFO", "-E", "-Q", "chunking_queue" ]
    user: "1000:1000"
    volumes:
      - ./chunking_service:/app
    depends_on:
      - redis
    environment:
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - S3_REGION=${S3_REGION}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - DOCKER_ENV=true
      - TZ=Asia/Bangkok
    networks:
      - redis_network

  thumbnail-worker:
    build:
      context: ./thumbnail_service
      dockerfile: Dockerfile_thumbnail
    container_name: thumbnail-worker
    command: [ "celery", "-A", "app.thumbnail", "worker", "--pool=solo", "--loglevel=INFO", "-E", "-Q", "thumbnail_queue" ]
    user: "1000:1000"
    volumes:
      - ./thumbnail_service:/app
    depends_on:
      - redis
      - video-processing-service
    environment:
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - S3_REGION=${S3_REGION}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - DOCKER_ENV=true
      - TZ=Asia/Bangkok
    networks:
      - redis_network

  video-service:
   build:
     context: ./video-service
     dockerfile: Dockerfile
   ports:
     - "8081:8081"
   environment:
     - SPRING_DATASOURCE_URL=jdbc:mariadb://maria-db:3306/toctik
     - SPRING_DATASOURCE_USERNAME=root
     - SPRING_DATASOURCE_PASSWORD=rootpass
     - SPRING_REDIS_HOST=redis
     - SPRING_REDIS_PORT=6379
     - CLOUDFLARE_R2_ENDPOINT=${S3_ENDPOINT_URL}
     - CLOUDFLARE_R2_ACCESS_KEY=${S3_ACCESS_KEY}
     - CLOUDFLARE_R2_SECRET_KEY=${S3_SECRET_KEY}
     - CLOUDFLARE_R2_BUCKET_NAME=${S3_BUCKET}
     - S3_REGION=${S3_REGION}
     - SERVER_PORT=8081
   depends_on:
     maria-db:
       condition: service_healthy
     redis:
       condition: service_healthy
   networks:
     - redis_network

networks:
  redis_network:
    driver: bridge

volumes:
  db_data:
  counter_data: